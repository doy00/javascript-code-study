function solution(phone_book) {
    // 해시 테이블을 선언
    const phoneMap = new Map(); 
    // phone_book 값을 해시 테이블에 저장 - O(n))
    for (const phone of phone_book) {
        phoneMap.set(phone, true);
    }
    // 해시테이블에 접두사가 있는지 확인 - O(n×m)
    for (const phone of phone_book) {
        // 번호들의 모든 접두사 생성 - O(m)
        for (let i = 1; i < phone.length; i++) {
            const prefix = phone.slice(0, i);
            if (phoneMap.has(prefix)) {
                return false;
            }
        }
    }
    return true;
}


// startsWith를 이용한 풀이
https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith

function solution2(phone_book) {
    // phone_book을 정렬하여 접두어가 바로 앞에 나오도록 함
    phone_book.sort();
    // 정렬된 phone_book을 순회하면서 접두어인지 확인
    for (let i = 0; i < phone_book.length-1; i++) {
        if (phone_book[i+1].startsWith(phone_book[i])) {
            return false;
        }
    }
    return true;
}
